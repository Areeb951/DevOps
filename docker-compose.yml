version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: leave-management-postgres
    environment:
      POSTGRES_DB: leave_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - leave-management-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build: ./backend
    container_name: leave-management-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/leave_management
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      JWT_SECRET: your-secure-jwt-secret-key-here-make-it-long-and-secure
      MAIL_USERNAME: ${MAIL_USERNAME:-}
      MAIL_PASSWORD: ${MAIL_PASSWORD:-}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - leave-management-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build: ./frontend
    container_name: leave-management-frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8080/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - leave-management-network

volumes:
  postgres_data:
    driver: local

networks:
  leave-management-network:
    driver: bridge
